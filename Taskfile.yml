version: '3'

vars:
  SHORT_VERSION: {sh: git describe --dirty}
  LONG_VERSION: {sh: git describe --long --dirty}
  DATE: {sh: date +%F}
  LDFLAGS: -X github.com/danpizz/giff/cmd.ShortVersion={{.SHORT_VERSION}} -X github.com/danpizz/giff/cmd.Version={{.LONG_VERSION}}

tasks:

  deploy-test-data:
    desc: deploy the testdata/sample-1.yaml to AWS Cloudformation for use with `test-aws`
    cmds:
      - |
        aws cloudformation deploy \
            --template-file testdata/sample-1.yaml \
            --stack-name sample-giff-stack \
            --parameter-overrides OtherPolicyArn=arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --tags Tag1="hello"
        aws cloudformation deploy \
            --template-file testdata/sample-volume.yaml \
            --stack-name sample-giff-stack-2 \
            --parameter-overrides Zone=eu-west-1a Size=1 \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --tags Tag1="hello"

  test-aws:
    desc: Run the AWS test, AWS authentication needed.
    cmds: 
      - go test -v .

  clean:
    desc: remove all the builds
    cmds: 
      - rm giff_*
      - go clean

  build:
    desc: build for the local platform
    cmds: 
      - go build -ldflags="{{.LDFLAGS}}" -v

  build-all:
    desc: build for Linux and MacOS, Intel and Arm
    deps: 
      - clean
    cmds:
      - env GOOS=darwin GOARCH=amd64 go build -ldflags="{{.LDFLAGS}}" -o giff_darwin_amd64_{{.LONG_VERSION}}
      - env GOOS=darwin GOARCH=arm64 go build -ldflags="{{.LDFLAGS}}" -o giff_darwin_arm64_{{.LONG_VERSION}}
      - env GOOS=linux GOARCH=amd64 go build -ldflags="{{.LDFLAGS}}" -o giff_linux_amd64_{{.LONG_VERSION}}
      - env GOOS=linux GOARCH=amd64 go build -ldflags="{{.LDFLAGS}}" -o giff_linux_arm64_{{.LONG_VERSION}}

  test:
    desc: run the tests
    cmds: 
      - go test -v ./cmd ./pkg 

  coverage:
    desc: build the coverage report
    cmds:
      - go test ./cmd ./pkg -cover -coverprofile=c.out
      - go tool cover -html=c.out -o coverage.html
